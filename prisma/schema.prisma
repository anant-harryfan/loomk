generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email          String       @unique
  firstname      String?
  lastname       String?
  createdAt      DateTime     @default(now())
  clerkId        String       @unique
  studio         Media?
  image          String?
  workspace      WorkSpace[]
  videos         Video[]
  subscription   Subscription?
  members        Member[]     
  notifications  Notification[]
  sender         Invite[]     @relation("sender")
  receiver       Invite[]     @relation("receiver") 
  trial          Boolean      @default(false)
  firstView          Boolean      @default(false)
  comment        Comment[]
  channel        Channel[] // Server[]
  chatpage       ChatPage[]
  research       research[]
}

// model Server{
//     id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   type         Type
//   name         String
//   User         User?    @relation(fields: [userId], references: [id])
//   userId       String?  @db.Uuid
//   createdAt    DateTime @default(now())
//   channel      Channel[]
//   videos       Video[]
// }
model Channel{
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String
  chats        Chatam[]
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?      @db.Uuid
  // videos       Video[]
}

model Chatam{
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  chatam       String
  chatamId     String?     @db.Uuid
  channel      Channel?  @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId     String?     @db.Uuid
}
model Comment{
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  comment       String
  reply         Comment[]   @relation("reply")
  Comment       Comment?    @relation("reply", fields: [commentId], references: [id])
  commentId     String?     @db.Uuid
  User         User?        @relation(fields: [userId], references: [id], onDelete: Cascade)
  // userId       String?      @unique @db.Uuid // agar ek user se ek message chahiye to karlo ye
  userId       String?      @db.Uuid
  Video        Video?        @relation(fields: [videoId], references: [id], onDelete: Cascade)
  videoId       String?      @db.Uuid
  createdAt    DateTime     @default(now())
}


model Subscription {
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  User         User?        @relation(fields: [userId], references: [id])
  userId       String?      @unique @db.Uuid
  createdAt    DateTime     @default(now())
  plan         SUBSCRIPTION_PLAN    @default(FREE)
  updatedAt    DateTime     @default(now())
  customerId   String       @unique
}

model Media {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  screen       String?
  mic          String?
  camera       String?
  preset       PRESET   @default(SD)
  user         User?    @relation(fields: [userId], references: [id])
  userId       String?  @unique @db.Uuid // ye dekh lena gadbadh hue to
}

model WorkSpace {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type         Type
  name         String
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?  @db.Uuid
  createdAt    DateTime @default(now())
  folders      Folder[]
  videos       Video[]
  members      Member[]     
  invite       Invite[]
  files        files[]
  htmlc       htmlc[]
}
// model WorkSpacePreview{
  
// }
model Folder{
  id           String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String   @default("Untitled Folder")
  createdAt    DateTime  @default(now())
  WorkSpace    WorkSpace? @relation(fields: [workSpaceId], references: [id])
  workSpaceId  String? @db.Uuid
  videos       Video[]
}
model Video {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title        String?   @default("Untitled Video")
  description  String?   @default("No Description") // Removed @unique
  source       String    @unique
  createdAt    DateTime  @default(now())
  Folder       Folder?   @relation(fields: [folderId], references: [id])
  folderId     String?   @db.Uuid
  User         User?     @relation(fields: [userId], references: [id])
  userId       String?   @db.Uuid
  processing   Boolean   @default(true)
  WorkSpace    WorkSpace? @relation(fields: [workSpaceId], references: [id], onDelete: Cascade)
  workSpaceId  String?   @db.Uuid
  views        Int       @default(0)
  summary      String?
  Comment      Comment[]
}

model Member {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  User         User?          @relation(fields: [userId], references: [id])
  userId       String?        @db.Uuid
  createdAt    DateTime       @default(now())
  member       Boolean        @default(true)
  WorkSpace    WorkSpace?       @relation(fields: [workSpaceId], references: [id])
  workSpaceId  String?        @db.Uuid
}

model Notification {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  User         User?     @relation(fields: [userId], references: [id])
  userId       String?   @db.Uuid
  content      String
}

model Invite {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sender       User?     @relation("sender", fields: [senderId], references: [id])
  senderId     String?   @db.Uuid
  receiver     User?     @relation("receiver", fields: [receiverId], references: [id])
  receiverId   String?   @db.Uuid
  content      String
  WorkSpace    WorkSpace? @relation(fields: [workSpaceId], references: [id])
  workSpaceId  String?   @db.Uuid
  accepted     Boolean   @default(false)
}

model ChatPage {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code         String    
  name         String
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?  @db.Uuid
}


model files {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
   createdAt    DateTime  @default(now())
    title        String?   @default("Untitled Video")
    data       String
    inTrash    Boolean
    logo      String 
    WorkSpace    WorkSpace? @relation(fields: [workSpaceId], references: [id])
  workSpaceId  String?   @db.Uuid
}

model htmlc{
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  WorkSpace    WorkSpace? @relation(fields: [workSpaceId], references: [id])
  workSpaceId  String?   @db.Uuid  @unique
  code          String   @default("a")
}

model research{
   id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    User         User?     @relation(fields: [userId], references: [id])
  userId       String?   @db.Uuid 
  code        String    
}

enum Type {
  PERSONAL
  PUBLIC
}

enum PRESET {
  HD
  SD
}

enum SUBSCRIPTION_PLAN {
  PRO
  FREE
}

// model india{
//     id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     code   String
//     archrya prafula chandra ray
// }
// model ganeshPuran {
//     id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     puran        String 
//     teachings    String
//     code         String
//     chapter      Int
//     Date         String

// }
// model TamilNadu {
//   id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   city          TamilNaduCity[]
// }
// model TamilNaduCity{
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state        TamilNadu?  @relation(fields: [stateId], references: [id])
//     stateId      String  @db.Uuid
//     name         String
//     ariyalur     ariyalur[]
//     chengalpattu Chengalpattu[]
//     chennai     Chennai[]
//     coimbatore  Coimbatore[]
//     cuddalore   Cuddalore[] 
//     Dharmapuri   Dharmapuri []
//     Dindigul  Dindigul []
//     Periyar  Periyar []
//     Kallakurichi  Kallakurichi []
//     Kancheepuram Kancheepuram []
//     Kanniyakumari Kanniyakumari []
//     Karur  Karur[]
//     Krishnagiri  Krishnagiri []
//     Madurai  Madurai []
//     Nagapattinam  Nagapattinam []
//     Namakkal  Namakkal []
//     Mayiladuthurai  Mayiladuthurai []
//     Perambalur  Perambalur []
//     Pudukkottai  Pudukkottai []
//     Ramanathapuram  Ramanathapuram []
//     Ranipet  Ranipet []
//     Salem Salem []
//     Tenkasi  Tenkasi []
//     Thanjavur  Thanjavur []
//     Neelakurinji  Neelakurinji []
//     Theni  Theni []
//     Thiruvallur  Thiruvallur []
//     Thiruvarur  Thiruvarur []
//     Thoothukkudi  Thoothukkudi []
//     Tiruchirappalli  Tiruchirappalli []
//     Tirunelveli  Tirunelveli []
//     Tirupathur  Tirupathur []
//     Tiruppur  Tiruppur []
//     Shivganga  Shivaganga[]
//     Tiruvannamalai Tiruvannamalai []
//     Sripuram Sripuram[]
//     Viluppuram  Viluppuram []
//     Virudhunagar Virudhunagar []
//     GANGAIKONDA_CHOLAPURAM GANGAIKONDA_CHOLAPURAM[]
// }
// model GANGAIKONDA_CHOLAPURAM {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Virudhunagar {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Viluppuram {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Sripuram {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Tiruvannamalai  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Tiruppur  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }

// model Tirupathur {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Tirunelveli  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Tiruchirappalli  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Thoothukkudi  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Thiruvarur   {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Thiruvallur   {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Theni   {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Neelakurinji  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Thanjavur  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Tenkasi  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Shivaganga  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Salem  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Ranipet  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model ariyalur{
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//     Id    String  @db.Uuid
//     code       String 
// }

// model Pudukkottai  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Ramanathapuram   {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Perambalur  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Namakkal   {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Nagapattinam    {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Mayiladuthurai   {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Madurai  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Chengalpattu {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Chennai  {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Coimbatore   {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Cuddalore    {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Dharmapuri     {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Dindigul     {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Periyar     {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Kallakurichi      {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Kancheepuram     {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Kanniyakumari      {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Karur       {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }
// model Krishnagiri      {
//     id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     state         TamilNaduCity? @relation(fields: [Id], references: [id])
//    Id   String @db.Uuid
// }

// model rakhiGadi {
//     id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//     code         String
// }
